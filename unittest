import unittest
from unittest.mock import patch, MagicMock
from csorion.main.python import common_data_sync  # Adjust if needed

class TestCopyTables(unittest.TestCase):

    @patch("csorion.main.python.common_data_sync.boto3.client")
    def test_copy_tables_mocked(self, mock_boto_client):
        # Mock the Glue client and paginator
        mock_glue_client = MagicMock()
        mock_paginator = MagicMock()
        mock_glue_client.get_paginator.return_value = mock_paginator
        mock_paginator.paginate.return_value = [
            {
                "TableList": [
                    {
                        "Name": "test_table",
                        "StorageDescriptor": {"Location": "s3://source/metadata/"},
                        "Parameters": {"classification": "parquet"}
                    }
                ]
            }
        ]
        mock_boto_client.return_value = mock_glue_client

        # Mock supporting functions if needed
        with patch("csorion.main.python.common_data_sync.copy_table") as mock_copy_table:
            common_data_sync.copy_tables()

            # Check paginator and table copy call
            mock_glue_client.get_paginator.assert_called_with("get_tables")
            mock_copy_table.assert_called_once_with(
                source_db="source_db",  # Replace with real value or param
                target_db="target_db",
                table_name="test_table",
                storage_descriptor=ANY,
                partition_keys=ANY,
                metadata_location="metadata",
                table_parameters=ANY,
                glue_client=mock_glue_client
            )

if __name__ == "__main__":
    unittest.main()
