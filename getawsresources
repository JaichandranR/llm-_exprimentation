Option 1 â€” Quick CSV via AWS CLI + jq (recommended for command line)

If you just want a spreadsheet-ready CSV, run:

aws resource-explorer-2 list-resources --region us-west-2 \
  --output json | jq -r '
    ["Arn","Region","ResourceType","Service","LastReportedAt"],
    (.Resources[] | [
      .Arn,
      .Region,
      .ResourceType,
      .Service,
      .LastReportedAt
    ]) | @csv' > aws_resources_uswest2.csv


âœ… What this does

Fetches all resources in us-west-2

Extracts key columns

Saves to aws_resources_uswest2.csv
(openable directly in Excel / Google Sheets)

ðŸ‘‰ You can add more fields (.Tags, .AccountId, etc.) if your Resource Explorer index includes them.

ðŸŸ¨ Option 2 â€” Let the CLI output CSV directly (simpler but fewer columns)

The AWS CLI can format to CSV natively:

aws resource-explorer-2 list-resources --region us-west-2 \
  --query "Resources[*].[Arn,Region,ResourceType,Service,LastReportedAt]" \
  --output text > aws_resources_uswest2.tsv


Then open the .tsv file in Excel â†’ Data â†’ From Text/CSV â†’ select Tab-delimited.

If you prefer true CSV:

aws resource-explorer-2 list-resources --region us-west-2 \
  --query "Resources[*].[Arn,Region,ResourceType,Service,LastReportedAt]" \
  --output json | jq -r '.[][] | @csv' > aws_resources_uswest2.csv

ðŸŸ¦ Option 3 â€” Use Python + boto3 to create Excel (.xlsx)

Hereâ€™s a ready script to fetch the same data and generate an Excel file.

import boto3
import pandas as pd

region = "us-west-2"
client = boto3.client("resource-explorer-2", region_name=region)

resources = []
paginator = client.get_paginator("list_resources")
for page in paginator.paginate():
    for r in page.get("Resources", []):
        resources.append({
            "Arn": r.get("Arn"),
            "Region": r.get("Region"),
            "ResourceType": r.get("ResourceType"),
            "Service": r.get("Service"),
            "LastReportedAt": r.get("LastReportedAt")
        })

df = pd.DataFrame(resources)
df.to_excel("aws_resources_uswest2.xlsx", index=False)
print(f"Saved {len(df)} resources to aws_resources_uswest2.xlsx")

ðŸ”§ Usage

Save as export_resources.py

Run:

pip install boto3 pandas openpyxl
python export_resources.py


Open aws_resources_uswest2.xlsx in Excel â€” neatly tabulated.

ðŸ’¡ Bonus Tip

If you need to scan multiple regions, just loop over them:

for region in ['us-west-2','us-east-1','us-east-2','eu-west-1']:
    # reuse same logic per region


and append results into one big DataFrame before saving.
