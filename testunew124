import json
import yaml
import tempfile
from pathlib import Path
import shutil

from src.generate_overview import main as generate_overview

def test_generate_overview_md():
    # Setup temp project structure
    with tempfile.TemporaryDirectory() as tmpdir:
        base_dir = Path(tmpdir)
        target_dir = base_dir / "target"
        models_dir = base_dir / "models"
        src_dir = base_dir / "src"
        target_dir.mkdir()
        models_dir.mkdir()
        src_dir.mkdir()

        # Create fake catalog.json
        catalog_data = {
            "nodes": {
                "model.dbt_project.table1": {
                    "metadata": {
                        "name": "table1",
                        "database": "my_database",
                        "schema": "common_data_analytics"
                    }
                },
                "model.dbt_project.table2": {
                    "metadata": {
                        "name": "table2",
                        "database": "my_database",
                        "schema": "common_data_analytics"
                    }
                },
                "model.dbt_project.skip_me": {
                    "metadata": {
                        "name": "skip_me",
                        "database": "my_database",
                        "schema": "common_data_raw"
                    }
                }
            }
        }

        catalog_path = target_dir / "catalog.json"
        with open(catalog_path, "w") as f:
            json.dump(catalog_data, f)

        # Patch the generate script paths to use temp dirs
        original_catalog_path = generate_overview.__globals__["CATALOG_PATH"]
        original_output_path = generate_overview.__globals__["OUTPUT_MD_PATH"]
        generate_overview.__globals__["CATALOG_PATH"] = catalog_path
        generate_overview.__globals__["OUTPUT_MD_PATH"] = models_dir / "overview.md"

        try:
            generate_overview()

            # Validate output
            output_file = models_dir / "overview.md"
            assert output_file.exists()

            content = output_file.read_text()
            assert "common_reference_iceberg" in content
            assert "- name: table1" in content
            assert "- name: table2" in content
            assert "skip_me" not in content

        finally:
            # Restore original paths to avoid test side effects
            generate_overview.__globals__["CATALOG_PATH"] = original_catalog_path
            generate_overview.__globals__["OUTPUT_MD_PATH"] = original_output_path
