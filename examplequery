from pyspark.sql import SparkSession

# Define your catalog name and output bucket
catalog_nm = "cosmos_nonhcd_iceberg"  # Replace with your actual catalog name
output_bucket = "s3://app-id-90177-dep-id-114232-uu-id-pee895fr5knp/"  # Replace with your actual S3 bucket path

# Initialize Spark session with Iceberg support
spark = (SparkSession.builder
    .appName("IcebergSnapshotLineage")
    .config(f"spark.sql.catalog.{catalog_nm}", "org.apache.iceberg.spark.SparkCatalog")
    .config(f"spark.sql.catalog.{catalog_nm}.catalog-impl", "org.apache.iceberg.aws.glue.GlueCatalog")
    .config(f"spark.sql.catalog.{catalog_nm}.io-impl", "org.apache.iceberg.aws.s3.S3FileIO")
    .config(f"spark.sql.catalog.{catalog_nm}.warehouse", output_bucket)
    .config("spark.sql.extensions", "org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions")
    .getOrCreate())

# List tables in the catalog
tables = spark.sql(f"SHOW TABLES IN {catalog_nm}.common_data").collect()
print("Listing tables:")

for table in tables:
    table_name = table.tableName
    print(f"\nüìò Table: {table_name}")

    try:
        # Query snapshot lineage using Iceberg metadata table
        snapshot_info = spark.sql(
            f"SELECT * FROM `{catalog_nm}.common_data.{table_name}$snapshots`"
        ).collect()

        print("üì∏ Snapshot Lineage:")
        for snapshot in snapshot_info:
            print(f"""  - Snapshot ID: {snapshot['snapshot_id']}
    Timestamp: {snapshot['committed_at']}
    Operation: {snapshot['operation']}
    Parent Snapshot ID: {snapshot['parent_id']}
    Manifest List: {snapshot['manifest_list']}
    Summary: {snapshot['summary']}
    """)

    except Exception as e:
        print(f"‚ö†Ô∏è  Error retrieving snapshot lineage for table {table_name}: {e}")
