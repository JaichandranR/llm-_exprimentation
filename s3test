import boto3
import io
from botocore.exceptions import ClientError

# Define the S3 bucket and output path (replace with your actual bucket name)
s3_bucket_name = "app-id-90177-dep-id-114232-uu-id-wsu077zdt1o"
s3_output_path = "glue-test-etl-output/s3_access_test.txt"

def test_s3_access(bucket_name, output_path):
    """ Validate S3 access by listing objects and writing a test file """
    try:
        # Initialize S3 resource
        s3 = boto3.resource("s3")
        bucket = s3.Bucket(bucket_name)

        # List objects in the bucket
        print(f"\nüîç Listing objects in S3 bucket: {bucket_name}")
        objects = list(bucket.objects.all())

        if objects:
            print(f"‚úÖ S3 Access Verified: Found {len(objects)} objects.")
            for obj in objects[:10]:  # Show first 10 files
                print(f" - {obj.key} (Size: {obj.size} bytes)")
        else:
            print(f"[WARNING] No objects found in bucket {bucket_name}.")

        # Write a test file to S3
        print("\nüìå Writing a test file to S3...")
        with io.StringIO() as buffer:
            buffer.write("S3 Access Test: Success\n")
            bucket.put_object(Body=buffer.getvalue(), Key=output_path)

        print(f"‚úÖ Test file successfully written to: s3://{bucket_name}/{output_path}")

    except ClientError as e:
        print(f"[ERROR] S3 Access Error: {e}")
    except Exception as e:
        print(f"[ERROR] Unexpected error while accessing S3: {e}")

if __name__ == "__main__":
    test_s3_access(s3_bucket_name, s3_output_path)
