COSMOS Dataset Sharing with Databricks
Detailed Documentation on CADS Requests and External S3 Access Setup
1. Introduction

The integration of COSMOS Iceberg tables with Databricks provides a governed and secure way for downstream consumers to access COSMOS datasets. This requires establishing cross-account S3 access, CADS approvals, and default database registration in the Central Governance Account.

This document captures:

The CADS request process.

S3 external account access request setup.

Default database and default S3 access information.

Validation and testing considerations.

2. High-Level Flow

Dataset Identification â€“ Select COSMOS Iceberg tables to share.

S3 Setup â€“ Configure S3 bucket access for consumer Databricks accounts.

CADS Request Submission â€“ Governance approval for cross-account access.

Default Database Setup â€“ Central Governance Database created for cataloging.

Databricks External Table Registration â€“ Tables registered and validated.

Validation & Monitoring â€“ Test access and maintain governance compliance.

3. CADS Request from Central Governance Account

A CADS request must be raised to approve cross-account access from the Central Governance Account to the consumerâ€™s Databricks workspace S3 bucket.

Example CADS JSON Payload
{
  "request_id": "uclx-78775693",
  "status": "IN_PROGRESS",
  "bucket_aws_account_id": "809616259930",
  "seal_id": "111872",
  "workspace_id": "11959374829062",
  "bucket_name": "app-id-90177-dep-id-114232-uuid-3kqzk3ncnztl",
  "bucket_region": "us-east-1",
  "catalog_name": null,
  "s3_prefix": "/",
  "cads_id": 124153,
  "cads_status": "PENDINGSMARTAPPROVAL",
  "cads_message": "PENDING",
  "maestro_id": "9bd79db8-58d6-4e89-8f37-ea032986d15d",
  "cads_url": "https://cads.gaiacloud.jpmchase.net/audits/124153"
}

Key Fields

request_id: Unique ID for tracking approval.

bucket_aws_account_id: AWS account where the consumer bucket resides.

workspace_id: Target Databricks workspace ID.

bucket_name: Name of S3 bucket requested for access.

cads_status: Current approval state (PENDINGSMARTAPPROVAL, APPROVED, etc).

cads_url: Governance system link for audit and approval tracking.

4. External S3 Account Access Request

For COSMOS datasets to be consumable, the external S3 bucket and access configuration must be registered in CADS.

Example External Access JSON
{
  "additional_external_locations": [
    "90177_pee895fr5knp_45708_root"
  ],
  "aws_glue_account_id": "73033559995",
  "resource_aws_glue_account_id": "571427284744",
  "aws_region": "us-east-1",
  "catalog_name": "ctg_cosmos_dev",
  "default_external_location": "111872_6kpi1u9ima1h_55130_cads",
  "is_admin_role": false,
  "role_permission": {
    "database_name": "90177-809616259930-common_data",
    "resource_type": "all_tables",
    "table_name": ""
  }
}

Explanation

additional_external_locations â€“ Other approved paths available.

catalog_name â€“ Glue catalog for registering COSMOS external tables.

default_external_location â€“ Default external storage for governance.

role_permission â€“ Defines scope of access (all_tables or specific).

5. Default Database and S3 Default Access Setup

After CADS approval, the default database and associated S3 default bucket access must be established in the Central Governance Account.

Default Database: Used for governance, central cataloging, and compliance.

S3 Default Bucket: Serves as the controlled location for external table metadata and data registration.

Steps:

Create S3 Bucket in Central Governance Account.

Grant Cross-Account Access for consumer AWS account(s).

Enable Default Database in Central Governance Account.

Associate Database with S3 Bucket for managed storage.

6. Validation and Testing

Verify table registration in Databricks.

Confirm read/write access to S3.

Check CADS status is APPROVED.

Validate API calls for Glue Catalog creation.

7. Core API Calls

Register External Table

Maps COSMOS Iceberg tables to Databricks external catalog.

Glue Catalog API Calls

Ensures Glue catalog is populated with schema and metadata.

8. Conclusion

By following this process:

CADS ensures governance compliance.

Cross-account S3 access enables secure data sharing.

Default Database setup provides catalog and auditing capabilities.

Databricks consumers gain seamless access to COSMOS Iceberg datasets.

ðŸ‘‰ Would you like me to also draw a full workflow diagram (with S3, CADS, Central Governance, and Databricks) to visually represent how requests, approvals, and access flows work? That could make this even clearer for onboarding docs.
