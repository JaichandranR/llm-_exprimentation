@Test
public void testAccept_withValidInput_shouldProcessMessage() {
    // Arrange
    String datasetName = "dataset1";
    String dependencyName = "dep1";
    String stepFunctionToken = "token123";

    String message = String.format(
        "{\"dataset\":\"%s\",\"dependency\":\"%s\",\"step_function_callback_token\":\"%s\"}",
        datasetName, dependencyName, stepFunctionToken
    );

    SQSEvent.SQSMessage sqsMessage = new SQSEvent.SQSMessage();
    sqsMessage.setBody(message);
    SQSEvent event = new SQSEvent();
    event.setRecords(Collections.singletonList(sqsMessage));

    // Mock SSM calls: first for dependency status, second for last updated timestamp
    when(ssmClient.getParameter(any(GetParameterRequest.class)))
        .thenReturn(GetParameterResponse.builder()
            .parameter(Parameter.builder().value("AVAILABLE").build())
            .build())
        .thenReturn(GetParameterResponse.builder()
            .parameter(Parameter.builder().value("2025-08-13T10:00:00Z").build())
            .build());

    // Act
    handler.handleRequest(event);

    // Assert
    verify(ssmClient, times(2)).getParameter(any(GetParameterRequest.class)); // expect exactly 2 calls
    verify(dynamoDbLockClient, atLeastOnce()).tryAcquireLock(any());
    verify(stepFunctionsClient, atLeastOnce()).sendTaskSuccess(any(SendTaskSuccessRequest.class));
}
