import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.web.client.RestTemplate;

public class RequestHandlerClientServiceImplTest {

    @Mock
    private RestTemplate restTemplate;

    @Mock
    private RestTemplate c2dcRestTemplate;

    @Mock
    private IdaTokenProvider idaTokenProvider;

    @InjectMocks
    private RequestHandlerClientServiceImpl service;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);
        // set Trino URL value
        service.url = "http://trino-test:8080";
    }

    @Test
    void testPostQueryToTrino() {
        // Arrange
        String mockToken = "mock-token";
        String query = "SELECT 1";
        String expectedResponse = "OK";

        when(idaTokenProvider.getIdaAccessToken()).thenReturn(mockToken);
        when(c2dcRestTemplate.postForObject(
                eq(service.url + "/v1/statement"),
                any(HttpEntity.class),
                eq(String.class)
        )).thenReturn(expectedResponse);

        // Act
        service.PostQueryToTrino(query);

        // Assert
        verify(idaTokenProvider).getIdaAccessToken();
        verify(c2dcRestTemplate).postForObject(eq(service.url + "/v1/statement"), any(HttpEntity.class), eq(String.class));
    }

    @Test
    void testGetStateFromTrino() {
        // Arrange
        String mockToken = "mock-token";
        String nextUri = "http://trino-test:8080/next";
        String expectedResponse = "OK";

        when(idaTokenProvider.getIdaAccessToken()).thenReturn(mockToken);
        when(c2dcRestTemplate.getForObject(eq(nextUri), eq(String.class))).thenReturn(expectedResponse);

        // Act
        service.GetStateFromTrino(nextUri);

        // Assert
        verify(idaTokenProvider).getIdaAccessToken();
        verify(c2dcRestTemplate).getForObject(eq(nextUri), eq(String.class));
    }
}
