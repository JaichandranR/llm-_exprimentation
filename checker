@Test
void testC2cIdaTokenProviderBean() throws Exception {
    IdaClientProperties mockProps = mock(IdaClientProperties.class);
    when(mockProps.resourceUri()).thenReturn("https://example.com/resource");
    when(mockProps.providerUrl()).thenReturn("https://example.com/provider");

    IdaClientConfiguration config = new IdaClientConfiguration(mockProps);

    // Inject awsRegion
    java.lang.reflect.Field field = IdaClientConfiguration.class.getDeclaredField("awsRegion");
    field.setAccessible(true);
    field.set(config, "us-east-1");

    IdaTokenProvider mockTokenProvider = mock(IdaTokenProvider.class);

    try (MockedStatic<IdaSynchronousRefreshClientTokenProvider> mocked = mockStatic(IdaSynchronousRefreshClientTokenProvider.class)) {
        IdaSynchronousRefreshClientTokenProvider.Builder builderMock = mock(IdaSynchronousRefreshClientTokenProvider.Builder.class);
        when(builderMock.id(anyString())).thenReturn(builderMock);
        when(builderMock.resourceUri(anyString())).thenReturn(builderMock);
        when(builderMock.providerUrl(anyString())).thenReturn(builderMock);
        when(builderMock.fetchTokenOnBuild(anyBoolean())).thenReturn(builderMock);
        when(builderMock.tokenRetrievalStrategy(any())).thenReturn(builderMock);
        when(builderMock.build()).thenReturn(mockTokenProvider);

        mocked.when(IdaSynchronousRefreshClientTokenProvider::builder).thenReturn(builderMock);

        IdaTokenProvider result = config.c2cIdaTokenProvider();
        assertSame(mockTokenProvider, result);
    }
}
