class MockDataFrame:
    def __init__(self, data):
        self.data = pd.DataFrame(data)

    def filter(self, condition):
        if callable(condition):
            return MockDataFrame(self.data[condition(self.data)])
        return self

    def withColumn(self, name, value):
        if callable(value):
            self.data[name] = value(self.data)
        else:
            self.data[name] = value
        return self

    def select(self, *args):
        return MockDataFrame(self.data[list(args)])

    def distinct(self):
        return MockDataFrame(self.data.drop_duplicates())

    def orderBy(self, column):
        return MockDataFrame(self.data.sort_values(by=column))

    def limit(self, num):
        return MockDataFrame(self.data.head(num))

    def rdd(self):
        return self.data.values

    def __getitem__(self, key):
        return self.data[key]

    @property
    def columns(self):
        return self.data.columns
