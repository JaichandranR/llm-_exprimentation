import sys
import types
import builtins
import unittest
import boto3
import types
from unittest import mock

# Set fake CLI arguments for getResolvedOptions
sys.argv = [
    "common_data_sync.py",
    "--source_db", "dummy_src",
    "--target_db", "dummy_target",
    "--region", "us-east-1",
    "--s3_bucket", "dummy-bucket",
    "--s3_prefix", "dummy-prefix"
]

# --- Mock glue and pyspark modules before import ---
awsglue_mock = types.ModuleType("awsglue")
context_mock = types.ModuleType("awsglue.context")
utils_mock = types.ModuleType("awsglue.utils")
pyspark_mock = types.ModuleType("pyspark")
pyspark_context_mock = types.ModuleType("pyspark.context")

# Mock return values
context_mock.GlueContext = mock.MagicMock()
utils_mock.getResolvedOptions = mock.MagicMock(return_value={
    "source_db": "dummy_src",
    "target_db": "dummy_target",
    "region": "us-east-1",
    "s3_bucket": "dummy-bucket",
    "s3_prefix": "dummy-prefix"
})
pyspark_context_mock.SparkContext = mock.MagicMock()

# Inject into sys.modules
sys.modules["awsglue"] = awsglue_mock
sys.modules["awsglue.context"] = context_mock
sys.modules["awsglue.utils"] = utils_mock
sys.modules["pyspark"] = pyspark_mock
sys.modules["pyspark.context"] = pyspark_context_mock

# Now safely import the target module
from src.main.python import common_data_sync

class TestCommonDataSync(unittest.TestCase):
    def test_import_successful(self):
        self.assertIsNotNone(common_data_sync)
