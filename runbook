import unittest
from unittest.mock import patch, MagicMock

# Patch GlueContext and SparkContext at import time
with patch("src.main.python.wis_etl.GlueContext", MagicMock()), \
     patch("src.main.python.wis_etl.SparkContext", MagicMock()):
    from src.main.python.wis_etl import get_path_for_data_set

class TestWisEtl(unittest.TestCase):
    def test_get_path_for_data_set_valid_inputs(self):
        bucket = "s3://test-bucket"
        source_dir = "source-dir"
        data_set = "test-dataset"
        expected = "s3://test-bucket/source-dir/test-dataset/"
        self.assertEqual(get_path_for_data_set(bucket, source_dir, data_set), expected)

    def test_get_path_for_data_set_empty_bucket(self):
        bucket = ""
        source_dir = "source-dir"
        data_set = "test-dataset"
        expected = "source-dir/test-dataset/"
        self.assertEqual(get_path_for_data_set(bucket, source_dir, data_set), expected)

    def test_get_path_for_data_set_empty_source_dir(self):
        bucket = "s3://test-bucket"
        source_dir = ""
        data_set = "test-dataset"
        expected = "s3://test-bucket/test-dataset/"
        self.assertEqual(get_path_for_data_set(bucket, source_dir, data_set), expected)

    def test_get_path_for_data_set_empty_data_set(self):
        bucket = "s3://test-bucket"
        source_dir = "source-dir"
        data_set = ""
        expected = "s3://test-bucket/source-dir/"
        self.assertEqual(get_path_for_data_set(bucket, source_dir, data_set), expected)

if __name__ == "__main__":
    unittest.main()
