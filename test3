{% macro debug_retention_extraction() %}
{# /* 
------------------------------------------------------------
Debug Macro: debug_retention_extraction
Purpose:
  - Verify if post_hook and retention_threshold can be read.
  - Print out model config and post_hook values for inspection.
------------------------------------------------------------
*/ #}

{% if execute %}

    {% set graph_nodes = graph.nodes.values()
        | selectattr('resource_type', 'equalto', 'model')
        | list %}

    {% for node in graph_nodes %}
        {% if not node.name.startswith('audit_') %}
            {{ log("===== MODEL: " ~ node.name ~ " =====", info=True) }}
            {{ log("Database: " ~ node.database ~ " | Schema: " ~ node.schema, info=True) }}

            {# /* Try reading config directly */ #}
            {{ log("Config dump:", info=True) }}
            {{ log(node.config, info=True) }}

            {# /* Try reading post-hook key directly */ #}
            {% set ph = node.config.get('post_hook', none) %}
            {{ log("Post Hook (post_hook): " ~ (ph if ph else 'None found'), info=True) }}

            {% set ph_alt = node.config.get('post-hook', none) %}
            {{ log("Post Hook (post-hook): " ~ (ph_alt if ph_alt else 'None found'), info=True) }}

            {# /* Try raw code â€” may contain the expire_snapshots() call */ #}
            {{ log("Raw SQL Snippet:", info=True) }}
            {{ log(node.raw_code, info=True) }}

        {% endif %}
    {% endfor %}

{% else %}
    {{ log("Skipping execution (parse-only mode)", info=True) }}
{% endif %}
{% endmacro %}
