def test_snapshot_expiration_and_orphan_file_removal_called(self):
    self.mock_spark.sql = MagicMock()

    # Patch get_backlog_partition_hours to simulate no backlog (triggering expiration)
    with patch('src.main.python.iceberg_compaction.get_backlog_partition_hours', return_value=[]):
        # Patch catalog and table strings
        with patch('src.main.python.iceberg_compaction.catalog_name', "awsdatacatalog"), \
             patch('src.main.python.iceberg_compaction.db_name', "sample_db"), \
             patch('src.main.python.iceberg_compaction.table_name', "sample_table"):
            
            # Trigger the main function
            iceberg_compaction.main()

            # Assert snapshot expiration and orphan file removal were attempted
            self.mock_spark.sql.assert_any_call(
                "CALL awsdatacatalog.sample_db.sample_table.remove_orphan_files()"
            )
            self.mock_spark.sql.assert_any_call(
                "CALL awsdatacatalog.sample_db.sample_table.expire_snapshots(RETENTION_THRESHOLD => '168h')"
            )
