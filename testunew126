def test_snapshot_expiration_and_orphan_file_removal_called(self):
    with patch("builtins.print") as mock_print, \
         patch("src.main.python.iceberg_compaction.SparkSession.builder") as mock_builder:
        
        args = {
            'catalog_nm': 'test_catalog',
            'table_nm': 'test_table',
            'source_db': 'test_db',
            'expire_snapshots_day': '7',
            'skip_newest_partitions': '0'
        }
        iceberg_compaction.args = args

        # Configure mock builder to return our mock Spark
        mock_builder.return_value.getOrCreate.return_value = self.mock_spark

        # Also patch .read.format().load() chain to prevent schema parsing error
        mock_df = MagicMock()
        mock_df.schema.fields = []
        self.mock_spark.read.format.return_value.load.return_value = mock_df
        mock_df.filter.return_value.select.return_value.first.return_value = [0]

        self.mock_spark.sql = MagicMock()

        iceberg_compaction.main()

        self.assertTrue(self.mock_spark.sql.called)
