    @patch("src.main.python.iceberg_compaction.get_last_compacted_index", return_value=485760)
    @patch("src.main.python.iceberg_compaction.get_backlog_partition_hours", return_value=[485761])
    @patch("src.main.python.iceberg_compaction.prepare_sql_for_hour", return_value="MOCK_SQL")
    def test_snapshot_expiration_and_orphan_file_removal_called(self, mock_prepare, mock_backlog, mock_last_index):
        args = {
            'catalog_nm': 'test_catalog',
            'table_nm': 'test_table',
            'source_db': 'test_db',
            'expire_snapshots_day': '7',
            'skip_newest_partitions': '0'
        }
        iceberg_compaction.args = args

        self.mock_spark.sql = MagicMock()
        self.mock_spark.table.return_value = MagicMock()
        self.mock_spark.catalog.refreshTable = MagicMock()

        # Patch SparkSession.getOrCreate to return the mock
        with patch("src.main.python.iceberg_compaction.SparkSession.getOrCreate", return_value=self.mock_spark):
            iceberg_compaction.main()

        # Assert SQL was called for snapshot expiration + compaction SQL
        self.assertTrue(self.mock_spark.sql.called)
        self.mock_spark.catalog.refreshTable.assert_called()
