def test_capture_metrics_handles_join_and_view_creation(self):
    mock_df = MagicMock()
    mock_filtered_df = MagicMock()
    mock_joined_df = MagicMock()

    self.mock_spark.table.return_value = mock_df

    mock_df.withColumn.return_value = mock_df
    mock_df.select.return_value = mock_df
    mock_df.distinct.return_value = mock_df

    # Important part:
    mock_df.filter.side_effect = [mock_filtered_df, mock_filtered_df]
    mock_filtered_df.withColumn.return_value = mock_filtered_df
    mock_filtered_df.select.return_value = mock_filtered_df
    mock_filtered_df.distinct.return_value = mock_filtered_df
    mock_filtered_df.withColumnRenamed.return_value = mock_filtered_df

    # Join result
    mock_filtered_df.join.return_value = mock_joined_df
    mock_joined_df.select.return_value = mock_joined_df
    mock_joined_df.createOrReplaceTempView.return_value = None

    mock_df.__getitem__.return_value.__ge__.return_value = MagicMock()
    mock_df.__getitem__.return_value.__lt__.return_value = MagicMock()

    iceberg_compaction.capture_metrics(
        self.mock_spark,
        "full_table",
        "metric_table",
        ["field1"],
        485762,
        [485740]
    )

    mock_filtered_df.join.assert_called_once()
    mock_joined_df.createOrReplaceTempView.assert_called_once_with("temp_metrics")
