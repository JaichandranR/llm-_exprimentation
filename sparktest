import boto3
import traceback
from pyspark.sql import SparkSession

# AWS Configuration
REGION_NAME = "us-east-1"
CATALOG_ID = "809616259930"  # ‚úÖ Producer AWS Glue Catalog ID
DATABASE_NAME = "common_data_dev"
TABLE_NAME = "87674_verum_application"

def fetch_first_10_rows_with_spark():
    """Fetch first 10 rows from Iceberg table using Spark & Glue Catalog."""
    try:
        print("\nüöÄ Step 1: Initializing Spark with Iceberg Support")

        # ‚úÖ FIX: Explicitly set Glue Catalog ID to access producer account
        spark = SparkSession.builder \
            .appName("GlueIcebergQuery") \
            .config("spark.sql.catalog.glue_catalog", "org.apache.iceberg.spark.SparkCatalog") \
            .config("spark.sql.catalog.glue_catalog.catalog-impl", "org.apache.iceberg.aws.glue.GlueCatalog") \
            .config("spark.sql.catalog.glue_catalog.catalog-id", CATALOG_ID) \  
            .config("spark.sql.catalog.glue_catalog.warehouse", "s3://your-glue-warehouse-bucket/") \
            .config("spark.sql.extensions", "org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions") \
            .getOrCreate()

        print("\nüöÄ Step 2: Testing Spark Iceberg Querying")

        # ‚úÖ FIX: Show available catalogs (should include glue_catalog)
        print("\nüîç Checking Spark Catalogs:")
        spark.sql("SHOW CATALOGS").show()

        # ‚úÖ FIX: Show producer account databases
        print("\nüîç Checking Spark Databases:")
        spark.sql("SHOW DATABASES IN glue_catalog").show()

        # ‚úÖ FIX: Show producer account tables
        print(f"\nüîç Checking Tables in {DATABASE_NAME}:")
        spark.sql(f"SHOW TABLES IN glue_catalog.{DATABASE_NAME}").show()

        # ‚úÖ FIX: Query the Iceberg table using the correct catalog
        iceberg_table = f"glue_catalog.{DATABASE_NAME}.{TABLE_NAME}"
        print(f"\nüîç Fetching first 10 rows from Iceberg table: {iceberg_table}")
        query = f"SELECT * FROM {iceberg_table} LIMIT 10"
        df = spark.sql(query)
        df.show()

    except Exception as e:
        print(f"[ERROR] An error occurred while querying Iceberg: {str(e)}")
        print(traceback.format_exc())

if __name__ == "__main__":
    fetch_first_10_rows_with_spark()
